@import "tailwindcss";

/* Font faces - using Google Fonts API with proper font-display */
@import url('https://fonts.googleapis.com/css2?family=Quicksand:wght@300;400;500;600;700&family=Poppins:wght@300;400;500;600;700;800&display=swap');

/* helper to apply Poppins to specific elements */
.font-poppins {
	font-family: "Poppins", system-ui, -apple-system, "Segoe UI", Roboto,
		"Helvetica Neue", Arial;
}

/* Entrance animation: fade + slide up */
@keyframes fadeUp {
	0% {
		opacity: 0;
		transform: translateY(18px) scale(0.995);
	}
	60% {
		opacity: 1;
		transform: translateY(-4px) scale(1.002);
	}
	100% {
		opacity: 1;
		transform: translateY(0) scale(1);
	}
}

.animate-fade-up {
	animation-name: fadeUp;
	animation-duration: 700ms;
	animation-timing-function: cubic-bezier(0.2, 0.9, 0.2, 1);
	animation-fill-mode: both;
}

/* stagger helper: set --i on the element or data-animate-index attribute */
.animate-staggered {
	opacity: 0;
}

.animate-staggered[data-animate-index] {
	animation-name: fadeUp;
	animation-duration: 700ms;
	animation-timing-function: cubic-bezier(0.2, 0.9, 0.2, 1);
	animation-fill-mode: both;
	animation-delay: calc(var(--i, 0) * 120ms);
}

/* small hover lift for the inner card */
.card-hover-lift:hover {
	transform: translateY(-6px) scale(1.02);
}

/* Services card hover interactions */
.card-wrapper {
	--offset-x: 12px;
	--offset-y: 12px;
}
.card-wrapper:hover .card-inner {
	transform: translateY(-10px) scale(1.02);
	box-shadow: 0 18px 40px rgba(0, 0, 0, 0.12);
}
.card-wrapper:hover .card-offset {
	transform: translate(calc(var(--offset-x) + 6px), calc(var(--offset-y) + 6px));
	filter: blur(8px) saturate(120%);
}
.card-wrapper:hover .card-img {
	transform: scale(1.06) translateY(-4px);
}

/* Respect reduced motion */
@media (prefers-reduced-motion: reduce) {
	.card-wrapper:hover .card-inner,
	.card-wrapper:hover .card-offset,
	.card-wrapper:hover .card-img {
		transition: none !important;
		transform: none !important;
	}
}

/* Category badge styling: reads per-badge accent from data-accent attribute */
.category-badge {
	--accent: transparent;
	background-color: white;
	color: #334155;
	border-color: #e6e9ef;
	transition: background-color 160ms ease-in-out, color 160ms ease-in-out,
		border-color 160ms ease-in-out, transform 160ms ease-in-out;
}
.category-badge:hover,
.category-badge:focus {
	/* Always use the brand orange on hover */
	background-color: #fb923c !important;
	color: white !important;
	border-color: #fb923c !important;
}

/* Illustration glow + wizzle (playful nudge) */
.illustration-glow {
	position: relative;
	transition: box-shadow 220ms ease, transform 300ms ease;
	box-shadow: 0 8px 30px rgba(251, 146, 60, 0.06); /* light orange glow */
}
.illustration-glow:hover {
	box-shadow: 0 18px 46px rgba(251, 146, 60, 0.16);
	animation: wizzle 420ms cubic-bezier(0.2, 0.9, 0.2, 1);
}

@keyframes wizzle {
	0% {
		transform: translateY(0) rotate(0deg);
	}
	30% {
		transform: translateY(-6px) rotate(-1deg);
	}
	60% {
		transform: translateY(-3px) rotate(1deg);
	}
	100% {
		transform: translateY(0) rotate(0deg);
	}
}

/* Reduce motion for users who prefer it */
@media (prefers-reduced-motion: reduce) {
	.illustration-glow,
	.illustration-glow:hover {
		animation: none;
		transition: none;
	}
}

/* Button wizzle: orange shadow + small nudge */
.btn-wizzle {
	transition: box-shadow 220ms ease,
		transform 260ms cubic-bezier(0.2, 0.9, 0.2, 1);
	box-shadow: 0 8px 24px rgba(24, 59, 86, 0.08); /* subtle default lift */
}
.btn-wizzle:hover {
	box-shadow: 0 18px 46px rgba(251, 146, 60, 0.18);
	animation: btn-wizzle 380ms cubic-bezier(0.2, 0.9, 0.2, 1);
}

@keyframes btn-wizzle {
	0% {
		transform: translateY(0) rotate(0deg);
	}
	30% {
		transform: translateY(-4px) rotate(-0.6deg);
	}
	60% {
		transform: translateY(-2px) rotate(0.6deg);
	}
	100% {
		transform: translateY(0) rotate(0deg);
	}
}

@media (prefers-reduced-motion: reduce) {
	.btn-wizzle,
	.btn-wizzle:hover {
		animation: none;
		transition: none;
	}
}

/* Fallback for browsers that don't support attr() for colors: when data-accent is set inline, we also set border on the element's style (already handled). */

/* Typing animation for hero paragraph (supports wrapped text) */
@keyframes typing {
	from {
		max-width: 0;
	}
	to {
		max-width: 100%;
	}
}

@keyframes blink-caret {
	0% {
		border-color: rgba(251, 146, 60, 0);
	}
	50% {
		border-color: #fb923c;
	}
	100% {
		border-color: rgba(251, 146, 60, 0);
	}
}

.typing {
	display: inline-block; /* allow width constraints while flowing inline */
	white-space: normal; /* allow wrapping */
	overflow: hidden; /* hide unrevealed text */
	max-width: 0; /* start hidden */
	border-right: 2px solid rgba(251, 146, 60, 0);
	animation: typing 3.6s steps(60, end) 0s 1 forwards,
		blink-caret 800ms step-end infinite;
	color: inherit;
}

@media (prefers-reduced-motion: reduce) {
	.typing {
		animation: none;
		border-right: none;
		max-width: 100%;
	}
}
